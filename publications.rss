<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>ZX-calculus publications</title><link>http://zxcalculus.com/publications.rss</link><description>An up to date list of the newest publications related to the ZX-calculus</description><language>en-US</language><lastBuildDate>Tue, 30 Aug 2022 19:42:48 GMT</lastBuildDate><generator>rfeed v1.0.0</generator><docs>https://github.com/svpino/rfeed/blob/master/README.md</docs><item><title>Equivalence Checking of Quantum Circuits with the ZX-Calculus</title><link>https://dx.doi.org/10.1109/JETCAS.2022.3202204</link><description>As state-of-the-art quantum computers are capable of running increasingly complex algorithms, the need for automated methods to design and test potential applications rises. Equivalence checking of quantum circuits is an important, yet hardly automated, task in the development of the quantum software stack. Recently, new methods have been proposed that tackle this problem from widely different perspectives. One of them is based on the ZX-calculus, a graphical rewriting system for quantum computing. However, the power and capability of this equivalence checking method has barely been explored. The aim of this work is to evaluate the ZX-calculus as a tool for equivalence checking of quantum circuits. To this end, it is demonstrated how the ZX-calculus based approach for equivalence checking can be expanded in order to verify the results of compilation flows and optimizations on quantum circuits. It is also shown that the ZX-calculus based method is not complete–especially for quantum circuits with ancillary qubits. In order to properly evaluate the proposed method, we conduct a detailed case study by comparing it to two other state-of-the-art methods for equivalence checking: one based on path-sums and another based on decision diagrams. The proposed methods have been integrated into the publicly available QCEC tool (https://github.com/cda-tum/qcec) which is part of the Munich Quantum Toolkit (MQT).</description><author>Tom Peham, Lukas Burgholzer and Robert Wille</author><pubDate>Fri, 26 Aug 2022 00:00:00 GMT</pubDate><guid isPermaLink="true">https://ieeexplore.ieee.org/document/9868772/authors#authors</guid></item><item><title>Equivalence Checking Paradigms in Quantum Circuit Design: A Case Study</title><link>https://dx.doi.org/10.1145/3489517.3530480</link><description>As state-of-the-art quantum computers are capable of running increasingly complex algorithms, the need for automated methods to design and test potential applications rises. Equivalence checking of quantum circuits is an important, yet hardly automated, task in the development of the quantum software stack. Recently, new methods have been proposed that tackle this problem from widely different perspectives. However, there is no established baseline on which to judge current and future progress in equivalence checking of quantum circuits. In order to close this gap, we conduct a detailed case study of two of the most promising equivalence checking methodologies---one based on decision diagrams and one based on the ZX-calculus---and compare their strengths and weaknesses.</description><author>Tom Peham, Lukas Burgholzer and Robert Wille</author><pubDate>Tue, 23 Aug 2022 00:00:00 GMT</pubDate><guid isPermaLink="true">https://doi.org/10.1145/3489517.3530480</guid></item><item><title>Formal diagrammatic spin physics</title><link>https://tel.archives-ouvertes.fr/tel-03719945</link><description>Diagrams are ubiquitous in physics and have catalysed progress on numerous occasions. From
tensor networks and quantum circuits to Feynman diagrams, there are few areas of physics
that don’t employ some informal pictorial reasoning. These diagrams represent the underlying
mathematical operations and aid physical interpretation, but cannot generally be computed
with directly. In this thesis the ZXH-calculus, a graphical language based on the ZX-calculus,
is offered as a prototype for a formal diagrammatic calculational tool for theoretical physics
involving spin. This extends the ZXH-calculus (and more broadly the ZX family of calculi to
which it belongs) beyond its traditional domain which has largely been dominated by quantum
computing. In order to do this the spin lattices taken from condensed matter physics are studied.
It is also shown how spin-networks of the form often seen as the state-space of loop quantum
gravity (LQG) can diagrammatised along with operators acting on them.
To achieve this a diagrammatic form of SU(2) representation theory is outlined. Following this
in condensed matter a number of results are shown. The 1D AKLT state, a symmetry protected
topological state, is expressed in the ZXH-calculus by developing a representation of spins higher
than 1/2 within the calculus. By exploiting the simplifying power of the ZXH-calculus rules it
is shown how this representation straightforwardly recovers the AKLT matrix-product state
representation, the existence of topologically protected edge states, and the non-vanishing of a
string order parameter. Extending beyond these known properties, the diagrammatic approach
also allows one to analytically derive that the Berry phase of any finite-length 1D AKLT chain
is π. In addition, an alternative proof that the 2D AKLT state on a hexagonal lattice can be
reduced to a graph state, demonstrating that it is a universal quantum computing resource.
Continuing on the theme of condensed matter it is then shown how one can build 2D higher-order
topological phases diagrammatically, which is used to illustrate a symmetry-breaking phase
transition.
Turning to LQG the first step is the analysis of Yutsis diagrams, a standard graphical calculus
used in quantum chemistry and quantum gravity, which captures the main features of SU(2)
representation theory. Second, it is shown how it embeds within Penrose’s binor calculus. The
two are then rewritten as ZXH-diagrams. In the process we show how the SU(2) invariance
of Wigner symbols is trivially provable in the ZXH-calculus. Additionally, we show how we
can explicitly diagrammatically calculate 3jm, 4jm and 6j symbols. It has long been thought
that quantum gravity should be closely aligned to quantum information theory. In this paper,
we present a way in which this connection can be made exact, by writing the spin-networks
of loop quantum gravity in the ZX-diagrammatic language of quantum computation. Finally
after outlining the motivation for considering spin-networks as the quantisation of space, the
geometric operators are discussed, and in specific cases diagrammatic versions of the operators
are provided. More generally what is done here shows a route by which LQG can be interpreted
in quantum informational terms by rewriting its kinematical states as networks of qubits in
ZXH.
In total these results demonstrate that the ZXH-calculus is a powerful language for representing
quantum systems and even allows for the computation on physical states entirely graphically.
Within condensed matter it is hoped this will pave the way to develop more efficient many-body
algorithms and giving a novel diagrammatic perspective on quantum phase transitions. In
LQG it is hoped this re-imagining of its state space will spur further integration of quantum
information and gravity.</description><author>Richard East</author><pubDate>Mon, 11 Jul 2022 00:00:00 GMT</pubDate><guid isPermaLink="true">https://tel.archives-ouvertes.fr/tel-03719945</guid></item><item><title>The Basis of Design Tools for Quantum Computing: Arrays, Decision Diagrams, Tensor Networks, and ZX-Calculus</title><link>https://dx.doi.org/10.1145/3489517.3530627</link><description>Quantum computers promise to efficiently solve important problems classical computers never will. However, in order to capitalize on these prospects, a fully automated quantum software stack needs to be developed. This involves a multitude of complex tasks from the classical simulation of quantum circuits, over their compilation to specific devices, to the verification of the circuits to be executed as well as the obtained results. All of these tasks are highly non-trivial and necessitate efficient data structures to tackle the inherent complexity. Starting from rather straight-forward arrays over decision diagrams (inspired by the design automation community) to tensor networks and the ZX-calculus, various complementary approaches have been proposed. This work provides a look "under the hood" of today's tools and showcases how these means are utilized in them, e.g., for simulation, compilation, and verification of quantum circuits.</description><author>Robert Wille, Lukas Burgholzer, Stefan Hillmich, Thomas Grurl, Alexander Ploier and Tom Peham</author><pubDate>Fri, 01 Jul 2022 00:00:00 GMT</pubDate><guid isPermaLink="true">https://doi.org/10.1145/3489517.3530627</guid></item><item><title>Multi-agent blind quantum computation without universal cluster state</title><link>http://arxiv.org/abs/2206.13330</link><description>Blind quantum computation (BQC) protocols enable quantum algorithms to be executed on third-party quantum agents while keeping the data and algorithm confidential. The previous proposals for measurement-based BQC require preparing a highly entangled cluster state. In this paper, we show that such a requirement is not necessary. Our protocol only requires pre-shared bell pairs between delegated quantum agents, and there is no requirement of any classical or quantum information exchange between agents during the execution. Our proposal requires fewer quantum resources than previous proposals by removing the universal cluster state.</description><author>Shuxiang Cao</author><pubDate>Mon, 27 Jun 2022 00:00:00 GMT</pubDate><guid isPermaLink="true">http://arxiv.org/abs/2206.13330</guid></item><item><title>A Pair Measurement Surface Code on Pentagons</title><link>http://arxiv.org/abs/2206.12780</link><description>In this paper, I present a way to compile the surface code into two-body parity measurements ("pair measurements"), where the pair measurements run along the edges of a Cairo pentagonal tiling. The resulting circuit improves on prior work by Chao et al. by using fewer pair measurements per four-body stabilizer measurement (5 instead of 6) and fewer time steps per round of stabilizer measurement (6 instead of 10). Using Monte Carlo sampling, I show that these improvements increase the threshold of the surface code when compiling into pair measurements from $≈ 0.2%$ to $≈ 0.4%$, and also that they improve the teraquop footprint at a $0.1%$ physical gate error rate from $≈6000$ qubits to $≈3000$ qubits. However, I also show that Chao et al's construction will have a smaller teraquop footprint for physical gate error rates below $≈ 0.03%$ (due to bidirectional hook errors in my construction). I also compare to the planar honeycomb code, showing that although this work does noticeably reduce the gap between the surface code and the honeycomb code (when compiling into pair measurements), the honeycomb code is still more efficient (threshold $≈ 0.8%$, teraquop footprint at $0.1%$ of $≈ 1000$).</description><author>Craig Gidney</author><pubDate>Sun, 26 Jun 2022 00:00:00 GMT</pubDate><guid isPermaLink="true">http://arxiv.org/abs/2206.12780</guid></item><item><title>Annealing optimisation of Mixed ZX Phase Circuits</title><link>http://arxiv.org/abs/2206.11839</link><description>We present a topology-aware optimisation technique for circuits of mixed ZX phase gadgets, based on conjugation by CX gates and simulated annealing.</description><author>Stefano Gogioso and Richie Yeung</author><pubDate>Thu, 23 Jun 2022 00:00:00 GMT</pubDate><guid isPermaLink="true">http://arxiv.org/abs/2206.11839</guid></item><item><title>Encoding High-level Quantum Programs as SZX-diagrams</title><link>http://arxiv.org/abs/2206.09376</link><description>The Scalable ZX-calculus is a compact graphical language used to reason about linear maps between quantum states. These diagrams have multiple applications, but they frequently have to be constructed in a case-by-case basis. In this work we present a method to encode quantum programs implemented in a fragment of the linear dependently typed Proto-Quipper-D language as families of SZX-diagrams. We define a subset of translatable Proto-Quipper-D programs and show that our procedure is able to encode non-trivial algorithms as diagrams that grow linearly on the size of the program.</description><author>Agustín Borgna and Rafael Romero</author><pubDate>Sun, 19 Jun 2022 00:00:00 GMT</pubDate><guid isPermaLink="true">http://arxiv.org/abs/2206.09376</guid></item><item><title>Complete flow-preserving rewrite rules for MBQC patterns with Pauli measurements</title><link>http://arxiv.org/abs/2205.02009</link><description>In the one-way model of measurement-based quantum computation (MBQC), computation proceeds via measurements on some standard resource state. So-called flow conditions ensure that the overall computation is deterministic in a suitable sense, with Pauli flow being the most general of these. Existing work on rewriting MBQC patterns while preserving the existence of flow has focused on rewrites that reduce the number of qubits.   In this work, we show that introducing new $Z$-measured qubits, connected to any subset of the existing qubits, preserves the existence of Pauli flow. Furthermore, we give a unique canonical form for stabilizer ZX-diagrams inspired by recent work of Hu &amp; Khesin [arXiv:2109.10210]. We prove that any MBQC-like stabilizer ZX-diagram with Pauli flow can be rewritten into this canonical form using only rules which preserve the existence of Pauli flow and that each of these rules can be reversed while also preserving the existence of Pauli flow. Hence we have complete graphical rewriting for MBQC-like stabilizer ZX-diagrams with Pauli flow.</description><author>Tommy McElvanney and Miriam Backens</author><pubDate>Wed, 04 May 2022 00:00:00 GMT</pubDate><guid isPermaLink="true">http://arxiv.org/abs/2205.02009</guid></item><item><title>Phase-free ZX diagrams are CSS codes (...or how to graphically grok the surface code)</title><link>http://arxiv.org/abs/2204.14038</link><description>In this paper, we demonstrate a direct correspondence between phase-free ZX diagrams, a graphical notation for representing and manipulating a certain class of linear maps on qubits, and Calderbank-Shor-Steane (CSS) codes, a large family of quantum error correcting codes constructed from classical codes, including for example the Steane code, surface codes, and colour codes. The stabilisers of a CSS code have an especially nice structure arising from a pair of orthogonal $\mathbb F_2$-linear subspaces, or in the case of maximal CSS codes, a single subspace and its orthocomplement. On the other hand, phase-free ZX diagrams can always be efficiently reduced to a normal form given by the basis elements of an $\mathbb F_2$-linear subspace. Here, we will show that these two ways of describing a quantum state by an $\mathbb F_2$-linear subspace $S$ are in fact the same. Namely, the maximal CSS code generated by $S$ fixes the quantum state whose ZX normal form is also given by $S$.   This insight gives us an immediate translation from stabilisers of a maximal CSS code into a ZX diagram describing its associated state. We show that we can extend this translation to stabilisers and logical operators of any (possibly non-maximal) CSS code by "bending wires". To demonstrate the utility of this translation, we give a simple picture of the surface code and a fully graphical derivation of the action of physical lattice surgery operations on the space of logical qubits, completing the ZX presentation of lattice surgery initiated by de Beudrap and Horsman.</description><author>Aleks Kissinger</author><pubDate>Fri, 29 Apr 2022 00:00:00 GMT</pubDate><guid isPermaLink="true">http://arxiv.org/abs/2204.14038</guid></item></channel></rss>