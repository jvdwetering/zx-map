<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>ZX-calculus publications</title><link>http://zxcalculus.com/publications.rss</link><description>An up to date list of the newest publications related to the ZX-calculus</description><language>en-US</language><lastBuildDate>Tue, 31 Jan 2023 12:32:20 GMT</lastBuildDate><generator>rfeed v1.0.0</generator><docs>https://github.com/svpino/rfeed/blob/master/README.md</docs><item><title>Towards a Curry-Howard Correspondence for Quantum Computation</title><link>https://theses.hal.science/tel-03959403/document</link><description>In this thesis, we are interested in the development of a Curry-Howard correspondence for quantum computing, allowing to represent quantum types and quantum control-flow. In the standard model of Quantum Computation, a classical computer is linked to a quantum coprocessor. The classical computer can then send instructions to allocate, update, or read quantum registers. The programs executed by the coprocessor are represented by a quantum circuit: a sequence of instructions that applies unitary operations to the input quantum bits. While the model is universal, in the sense that it can represent any unitary operations, it stays limited: it lacks of proper representation of non-causal execution flow. Normally, to represent branching, one can use a type system featuring a coproduct, allowing for the choice between two possible executions, but quantum circuits only feature qubits and tensors thereof. On the other hand, types and strongly related to logic via the Curry-Howard correspondence which states that types of programs correspond to formulas and programs to proofs, while the program evaluation is matched with the proof simplification. While this correspondence has been extended to multiple setting in classical computer, it has yet to emerge in quantum computing. To address those problems we follow two different approaches: the first one, through the development of a linear and reversible programming language, capturing a subset of quantum computing, along with a Curry-Howard correspondence with the logic µMALL. The language comes in two versions: one representing exactly complete, reversible functions while the other one can represent partial functions. Both version comes with an expressivity result: in the former, one can capture the whole class of Primitive Recursive Functions, while in the later any Turing Machine we show how to capture any Turing Machine. The second approach follows the development of token-based semantics, inspired by Girard’s Geometry of Interaction, for graphical language for quantum computation. In this approach, a token-based semantics was given for the ZX-Calculus: a graphical language for quantum computation capable of representing any linear operators. We show how the token-based semantics matches the denotational one. We extend the ZX-Calculus with a coproduct and an explicit tensor in the development of the Many-Worlds Calculus. This new languages comes with a token-based semantics and an equational theory. We show how quantum control can be represented in this system. Finally, the programming language is modified to be able to realize pure quantum computation and the graphical language is then used as a denotational model for it. </description><author>Agustín Borgna</author><pubDate>Fri, 27 Jan 2023 00:00:00 GMT</pubDate><guid isPermaLink="true">https://theses.hal.science/tel-03959403/document</guid></item><item><title>Equivariant quantum graph circuits: constructions for universal approximation over graphs</title><link>https://dx.doi.org/10.1007/s42484-022-00086-w</link><description>We investigate quantum circuits for graph representation learning, and propose equivariant quantum graph circuits (EQGCs), as a class of parameterized quantum circuits with strong relational inductive bias for learning over graph-structured data. Conceptually, EQGCs serve as a unifying framework for quantum graph representation learning, allowing us to define several interesting subclasses subsuming existing proposals. In terms of the representation power, we prove that the subclasses of interest are universal approximators for functions over the bounded graph domain. This theoretical perspective on quantum graph machine learning methods opens many directions for further work, and could lead to models with capabilities beyond those of classical approaches. We also provide experimental evidence, and observe that the performance of EQGCs scales well with the depth of the model.</description><author>Péter Mernyei, Konstantinos Meichanetzidis and İsmail \̇lkan Ceylan</author><pubDate>Tue, 24 Jan 2023 00:00:00 GMT</pubDate><guid isPermaLink="true">https://link.springer.com/article/10.1007/s42484-022-00086-w</guid></item><item><title>Towards a compiler toolchain for quantum programs</title><link>https://lmf.cnrs.fr/downloads/Perso/thesis-aborgna.pdf</link><description>In this thesis, we present various contributions to the different stages of a quantum compiler toolchain. Our first contribution is the definition of a new intermediate representation for quantum programs based on an extension of the ZX calculus called Scalable ZX (SZX), which allows us to compactly represent quantum circuits repeated structure. We introduce a non-trivial fragment of the Proto-Quipper-D language and present its encoding into families of such SZX-diagrams, that can be used to optimize recurrent segments of the program in a single optimization pass. This intermediate representation can then be transformed into a ZX diagram or a quantum circuit to continue the compilation process. This work was first presented at the International Workshop on Programming Languages for Quantum Computing (PLanQC 2022), and a full version was published in the proceedings of the Quantum Physics and Logic Conference (QPL 2022). A second contribution of this work is the definition of a new optimization procedure for quantum circuits containing both quantum and classical segments, based on the method by Duncan et al. We are able to use an extension of the ZX calculus called ZX Ground to represent such hybrid programs, and optimize programs that encode some communication between the quantum and classical components. A preliminary version of this work was first presented in the proceedings of the International Workshop on Quantum Compilation (IWQC 2020), and finally published at the Asian Symposium on Programming Languages and Systems (APLAS 2021). We have implemented our optimization procedure as an extension of the ZX-diagram manipulation tool pyzx, and upstreamed some of the changes to the main repository. Finally, our last contribution pertains to the detection of classical segments in a hybrid quantum-classical circuit. Some automated optimization processes such as the one we present may produce circuits that computes quantumly some operations that could be performed classically using fewer resources. We formalise the classicalisation problem and present an efficient heuristic to detect such segments. This work was developed jointly with the optimization procedure for hybrid quantum-classical circuits, and a succinct version was published along it at APLAS 2021.</description><author>Agustín Borgna</author><pubDate>Fri, 13 Jan 2023 00:00:00 GMT</pubDate><guid isPermaLink="true">https://lmf.cnrs.fr/downloads/Perso/thesis-aborgna.pdf</guid></item><item><title>Graphical quantum Clifford-encoder compilers from the ZX calculus</title><link>http://arxiv.org/abs/2301.02356</link><description>We present a quantum compilation algorithm that maps Clifford encoders, an equivalence class of quantum circuits that arise universally in quantum error correction, into a representation in the ZX calculus. In particular, we develop a canonical form in the ZX calculus and prove canonicity as well as efficient reducibility of any Clifford encoder into the canonical form. The diagrams produced by our compiler explicitly visualize information propagation and entanglement structure of the encoder, revealing properties that may be obscured in the circuit or stabilizer-tableau representation.</description><author>Andrey Boris Khesin, Jonathan Z. Lu and Peter W. Shor</author><pubDate>Fri, 06 Jan 2023 00:00:00 GMT</pubDate><guid isPermaLink="true">http://arxiv.org/abs/2301.02356</guid></item><item><title>Classically Simulating Quantum Supremacy IQP Circuits trough a Random Graph Approach</title><link>http://arxiv.org/abs/2212.08609</link><description>Quantum Supremacy is a demonstration of a computation by a quantum computer that can not be performed by the best classical computer in a reasonable time. A well-studied approach to demonstrating this on near-term quantum computers is to use random circuit sampling. It has been suggested that a good candidate for demonstrating quantum supremacy with random circuit sampling is to use \emphIQP circuits. These are quantum circuits where the unitary it implements is diagonal. In this paper we introduce improved techniques for classically simulating random IQP circuits. We find a simple algorithm to calculate an amplitude of an $n$-qubit IQP circuit with dense random two-qubit interactions in time $O(\fracłog^2 nn 2^n )$, which for sparse circuits (where each qubit interacts with $O(łog n)$ other qubits) runs in $o(2^n/\textpoly(n))$ for any given polynomial. Using a more complicated stabiliser decomposition approach we improve the algorithm for dense circuits to $Ołeft(\frac(łog n)^4-βn^2-β 2^n i̊ght)$ where $β ≈ 0.396$. We benchmarked our algorithm and found that we can simulate up to 50-qubit circuits in a couple of minutes on a laptop. We estimate that 70-qubit circuits are within reach for a large computing cluster.</description><author>Julien Codsi and John van de Wetering</author><pubDate>Fri, 16 Dec 2022 00:00:00 GMT</pubDate><guid isPermaLink="true">http://arxiv.org/abs/2212.08609</guid></item><item><title>A Graphical #SAT Algorithm for Formulae with Small Clause Density</title><link>http://arxiv.org/abs/2212.08048</link><description>We study the counting version of the Boolean satisfiability problem #SAT using the ZH-calculus, a graphical language originally introduced to reason about quantum circuits. Using this we find a natural extension of #SAT which we call $#SAT_±$, where variables are additionally labeled by phases, which is GapP-complete. Using graphical reasoning, we find a reduction from #SAT to $#2SAT_±$ in the ZH-calculus. We observe that the DPLL algorithm for #2SAT can be adapted to $#2SAT_±$ directly and hence that Wahlstrom's $O^*(1.2377^n)$ upper bound applies to $#2SAT_±$ as well. Combining this with our reduction from #SAT to $#2SAT_±$ gives us novel upper bounds in terms of clauses and variables that are better than $O^*(2^n)$ for small clause densities of $\fracmn &lt; 2.25$. This is to our knowledge the first non-trivial upper bound for #SAT that is independent of clause size. Our algorithm improves on Dubois' upper bound for $#kSAT$ whenever $\fracmn &lt; 1.85$ and $k ≥ 4$, and the Williams' average-case analysis whenever $\fracmn &lt; 1.21$ and $k ≥ 6$. We also obtain an unconditional upper bound of $O^*(1.88^m)$ for $#4SAT$ in terms of clauses only, and find an improved bound on $#3SAT$ for $1.2577 &lt; \fracmn łeq \frac73$. Our results demonstrate that graphical reasoning can lead to new algorithmic insights, even outside the domain of quantum computing that the calculus was intended for.</description><author>Tuomas Laakkonen, Konstantinos Meichanetzidis and John van de Wetering</author><pubDate>Thu, 15 Dec 2022 00:00:00 GMT</pubDate><guid isPermaLink="true">http://arxiv.org/abs/2212.08048</guid></item><item><title>Category Theory for Quantum Natural Language Processing</title><link>http://arxiv.org/abs/2212.06615</link><description>This thesis introduces quantum natural language processing (QNLP) models based on a simple yet powerful analogy between computational linguistics and quantum mechanics: grammar as entanglement. The grammatical structure of text and sentences connects the meaning of words in the same way that entanglement structure connects the states of quantum systems. Category theory allows to make this language-to-qubit analogy formal: it is a monoidal functor from grammar to vector spaces. We turn this abstract analogy into a concrete algorithm that translates the grammatical structure onto the architecture of parameterised quantum circuits. We then use a hybrid classical-quantum algorithm to train the model so that evaluating the circuits computes the meaning of sentences in data-driven tasks.   The implementation of QNLP models motivated the development of DisCoPy (Distributional Compositional Python), the toolkit for applied category theory of which the first chapter gives a comprehensive overview. String diagrams are the core data structure of DisCoPy, they allow to reason about computation at a high level of abstraction. We show how they can encode both grammatical structures and quantum circuits, but also logical formulae, neural networks or arbitrary Python code. Monoidal functors allow to translate these abstract diagrams into concrete computation, interfacing with optimised task-specific libraries.   The second chapter uses DisCopy to implement QNLP models as parameterised functors from grammar to quantum circuits. It gives a first proof-of-concept for the more general concept of functorial learning: generalising machine learning from functions to functors by learning from diagram-like data. In order to learn optimal functor parameters via gradient descent, we introduce the notion of diagrammatic differentiation: a graphical calculus for computing the gradients of parameterised diagrams.</description><author>Alexis Toumi</author><pubDate>Tue, 13 Dec 2022 00:00:00 GMT</pubDate><guid isPermaLink="true">http://arxiv.org/abs/2212.06615</guid></item><item><title>How to sum and exponentiate Hamiltonians in ZXW calculus</title><link>http://arxiv.org/abs/2212.04462</link><description>This paper develops practical summation techniques in ZXW calculus to reason about quantum dynamics, such as unitary time evolution. First we give a direct representation of a wide class of sums of linear operators, including arbitrary qubits Hamiltonians, in ZXW calculus. As an application, we demonstrate the linearity of the Schrödinger equation and give a diagrammatic representation of the Hamiltonian in Greene-Diniz et al (Gabriel, 2022), which is the first paper that models carbon capture using quantum computing. We then use the Cayley-Hamilton theorem to show in principle how to exponentiate arbitrary qubits Hamiltonians in ZXW calculus. Finally, we develop practical techniques and show how to do Taylor expansion and Trotterization diagrammatically for Hamiltonian simulation. This sets up the framework for using ZXW calculus to the problems in quantum chemistry and condensed matter physics.</description><author>Razin A. Shaikh, Quanlong Wang and Richie Yeung</author><pubDate>Thu, 08 Dec 2022 00:00:00 GMT</pubDate><guid isPermaLink="true">http://arxiv.org/abs/2212.04462</guid></item><item><title>Quantum computation on a 19-qubit wide 2d nearest neighbour qubit array</title><link>http://arxiv.org/abs/2212.01550</link><description>In this paper, we explore the relationship between the width of a qubit lattice constrained in one dimension and physical thresholds for scalable, fault-tolerant quantum computation. To circumvent the traditionally low thresholds of small fixed-width arrays, we deliberately engineer an error bias at the lowest level of encoding using the surface code. We then address this engineered bias at a higher level of encoding using a lattice-surgery surface code bus that exploits this bias, or a repetition code to make logical qubits with unbiased errors out of biased surface code qubits. Arbitrarily low error rates can then be reached by further concatenating with other codes, such as Steane [[7,1,3]] code and the [[15,7,3]] CSS code. This enables a scalable fixed-width quantum computing architecture on a square qubit lattice that is only 19 qubits wide, given physical qubits with an error rate of $8.0\times 10^-4$. This potentially eases engineering issues in systems with fine qubit pitches, such as quantum dots in silicon or gallium arsenide.</description><author>Alexis Shaw, Michael Bremner, Alexandru Paler, Daniel Herr and Simon J. Devitt</author><pubDate>Sat, 03 Dec 2022 00:00:00 GMT</pubDate><guid isPermaLink="true">http://arxiv.org/abs/2212.01550</guid></item><item><title>Active volume: An architecture for efficient fault-tolerant quantum computers with limited non-local connections</title><link>http://arxiv.org/abs/2211.15465</link><description>In existing general-purpose architectures for surface-code-based fault-tolerant quantum computers, the cost of a quantum computation is determined by the circuit volume, i.e., the number of qubits multiplied by the number of non-Clifford gates. We introduce an architecture using non-2D-local connections in which the cost does not scale with the number of qubits, and instead only with the number of logical operations. Each logical operation has an associated active volume, such that the cost of a quantum computation can be quantified as a sum of active volumes of all operations. For quantum computations with thousands of logical qubits, the active volume can be orders of magnitude lower than the circuit volume. Importantly, the architecture does not require all-to-all connectivity between N logical qubits. Instead, each logical qubit is connected to O(log N) other sites. As an example, we show that, using the same number of logical qubits, a 2048-bit factoring algorithm can be executed 44 times faster than on a general-purpose architecture without non-local connections. With photonic qubits, long-range connections are available and we show how photonic components can be used to construct a fusion-based active-volume quantum computer.</description><author>Daniel Litinski and Naomi Nickerson</author><pubDate>Mon, 28 Nov 2022 00:00:00 GMT</pubDate><guid isPermaLink="true">http://arxiv.org/abs/2211.15465</guid></item></channel></rss>